version: '3.4'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"

  brouker:
    image: confluentinc/cp-kafka:latest
    container_name: brouker
    ports:
      - "29092:29092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_DOCKER:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_DOCKER://brouker:29092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_DOCKER://0.0.0.0:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  storage:
    container_name: storage
    build:
      context: bookStorageService
      dockerfile: Dockerfile
    ports:
      - 8085:8085
    depends_on:
      - brouker
      - postgres
    extra_hosts:
      - host.docker.internal:host-gateway
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://host.docker.internal:5432/book
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=GL96Y4I9w2
      - SPRING_JPA_HIBERNATE_DDL_AUTO=create-drop
      - SERVER_PORT=8085
      - JWT_SECRET=2c2332e9e3589cbb36b0ba5fba65f993a3902ea00847b347e35230d7af208a1c

  tracker:
    container_name: tracker
    build:
      context: bookTrackerService
      dockerfile: Dockerfile
    ports:
      - 8086:8086
    depends_on:
      - brouker
      - postgres
    extra_hosts:
      - host.docker.internal:host-gateway
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://host.docker.internal:5432/status
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=GL96Y4I9w2
      - SPRING_JPA_HIBERNATE_DDL_AUTO=create-drop
      - SERVER_PORT=8086
      - JWT_SECRET=2c2332e9e3589cbb36b0ba5fba65f993a3902ea00847b347e35230d7af208a1c

  auth:
    container_name: auth
    build:
      context: authService
      dockerfile: Dockerfile
    ports:
      - 8087:8087
    depends_on:
      - postgres
    extra_hosts:
      - host.docker.internal:host-gateway
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://host.docker.internal:5432/jwt_security
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=GL96Y4I9w2
      - SPRING_JPA_HIBERNATE_DDL_AUTO=create-drop
      - SERVER_PORT=8087
      - JWT_SECRET=2c2332e9e3589cbb36b0ba5fba65f993a3902ea00847b347e35230d7af208a1c

  postgres:
    image: 'postgres:10'
    container_name: 'postgres'
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=GL96Y4I9w2
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4:latest
    restart: "no"
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./docker/pgadmin/servers.json:/pgadmin4/servers.json
      - ./docker/pgadmin/pgpass:/pgadmin4/pgpass
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
      PGADMIN_CONFIG_SERVER_MODE: "False"
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: "False"
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:80/misc/ping || exit -1
      interval: 10s
      timeout: 5s
      start_period: 10s
      retries: 5
    entrypoint: /bin/sh -c "chmod 600 /pgadmin4/pgpass; /entrypoint.sh;"

volumes:
  postgres_data:
    driver: local
  pgadmin_data:

